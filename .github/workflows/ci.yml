name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  shared:
    uses: ./.github/workflows/shared_workflow.yml
    with:
      python-version: "3.12"
    env:
      ENV_VERSION: ${{ secrets.ENV_VERSION }}

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start services
        run: docker compose -f docker-compose.dev.yaml up -d --build
        env:
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          STARKNET_NODE_URL: ${{ secrets.STARKNET_NODE_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          ENV_VERSION: ${{ secrets.ENV_VERSION }}

      - name: Run tests
        run: |
          docker compose exec backend poetry run pytest web_app/tests
        env:
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          STARKNET_NODE_URL: ${{ secrets.STARKNET_NODE_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          ENV_VERSION: ${{ secrets.ENV_VERSION }}

      - name: Run tests coverage
        run: |
          docker compose exec backend poetry run pytest --cov=web_app/tests --cov-fail-under=90
        env:
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          STARKNET_NODE_URL: ${{ secrets.STARKNET_NODE_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          ENV_VERSION: ${{ secrets.ENV_VERSION }}

      - name: Tear down
        run: |
          docker compose down
        env:
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          STARKNET_NODE_URL: ${{ secrets.STARKNET_NODE_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          ENV_VERSION: ${{ secrets.ENV_VERSION }}
