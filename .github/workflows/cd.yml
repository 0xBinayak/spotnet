name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Workflow"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Add known hosts
        run: |
          ssh-keyscan -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Prepare environment file
        run: |
          # Rename .env.dev to .env for docker-compose
          cp .env.dev .env
          
          # Optional: You can modify env values here if needed
          # sed -i 's/DEBUG=.*/DEBUG=False/' .env

      - name: Copy deployment files
        run: |
          # Create project directory if it doesn't exist
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "mkdir -p ${{ env.PROJECT_PATH }}"
          
          # Copy docker-compose and env files
          scp -P ${{ env.SERVER_PORT }} docker-compose.yml ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:${{ env.PROJECT_PATH }}/
          scp -P ${{ env.SERVER_PORT }} .env ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:${{ env.PROJECT_PATH }}/

      - name: Deploy to server
        run: |
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
            cd ${{ env.PROJECT_PATH }}
            
            
            # Pull latest images
            docker-compose pull
            
            # Stop and remove existing containers
            docker-compose down
            
            # Start new containers with new env
            docker-compose up -d
            
          "
