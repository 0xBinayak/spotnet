name: Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  # Docker configuration
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  # Database configuration (for test container)
  DB_HOST: localhost
  DB_PORT: 5432
  DB_NAME: test_db
  DB_USER: postgres
  DB_PASSWORD: postgres

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker Compose Installation
        run: docker-compose version

      - name: Build and Start Containers
        run: |
          docker-compose -f docker-compose.dev.yaml up -d --build

      - name: Wait for Containers
        run: |
          docker-compose -f docker-compose.dev.yaml exec -T backend_dev bash -c "until curl -s http://localhost:8000/health; do sleep 5; done"

      - name: Apply Migrations
        run: |
          docker exec backend_dev alembic -c web_app/alembic.ini upgrade head || {
            echo "Migration failed";
            docker-compose -f docker-compose.dev.yaml logs backend_dev;
            exit 1;
          }

      - name: Run Integration Tests
        run: |
          docker exec backend_dev pytest integration_tests/ -v --cov=web_app

      - name: Display Test Coverage
        run: |
          docker exec backend_dev pytest --cov-report term-missing --cov=web_app integration_tests/

      - name: Upload Test Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: path/to/coverage-output/

      - name: Clean Up
        if: always()
        run: |
          docker-compose -f docker-compose.dev.yaml down -v
