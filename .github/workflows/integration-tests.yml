name: Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Database configuration (for test container)
  DB_PORT: 5432
  DB_NAME: test_db
  DB_USER: postgres
  DB_PASSWORD: postgres
  # Load other environment variables from .env.dev file

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - ${{ env.DB_PORT }}:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Load environment variables
        run: |
          if [ -f .env.dev ]; then
            cat .env.dev >> $GITHUB_ENV
          fi

      - name: Build and Start Containers
        run: docker-compose -f docker-compose.dev.yaml up -d --build

      - name: Wait for Backend Service
        timeout-minutes: 5
        run: |
          while ! curl -s http://localhost:8000/health > /dev/null; do
            echo "Waiting for backend service..."
            sleep 5
          done

      - name: Apply Migrations
        run: |
          docker exec backend_dev alembic -c web_app/alembic.ini upgrade head || {
            echo "Migration failed. Showing backend logs:"
            docker-compose -f docker-compose.dev.yaml logs backend_dev
            exit 1
          }

      - name: Run Integration Tests with Coverage
        run: |
          docker exec backend_dev pytest integration_tests/ -v \
            --cov=web_app \
            --cov-report=term-missing \
            --cov-report=xml:coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
          if-no-files-found: error

      - name: Clean Up
        if: always()
        run: docker-compose -f docker-compose.dev.yaml down -v