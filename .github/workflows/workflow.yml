name: Workflow

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      additional-steps:
        required: false
        type: string
    secrets:
      POSTGRES_PASSWORD:
        required: false
        type: string

jobs:
  backend-setup:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry pytest pytest-cov pylint

      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Create .env File (Optional)
        if: secrets.POSTGRES_PASSWORD
        run: |
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" > .env

      - name: Run Additional Steps
        if: inputs.additional-steps
        run: |
          echo "${{ toJSON(inputs.additional-steps) }}" > additional-steps.json
          jq -r '.[]' additional-steps.json | while read step; do eval "$step"; done
